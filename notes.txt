1. interest or tag better
2. like and unlike the comment havent done


// Client-side (e.g., in your client application)
setInterval(() => {
    // Send a heartbeat signal to the server
    fetch('/heartbeat', { method: 'POST' });
}, 30000); // Send signal every 30 seconds

// Server-side (e.g., in your Express app)
app.post('/heartbeat', (req, res) => {
    // Update user's online status in the database
    // For example, using Mongoose:
    User.findByIdAndUpdate(req.user._id, { isOnline: true })
        .then(() => {
            res.sendStatus(200);
        })
        .catch(err => {
            console.error('Error updating online status:', err);
            res.sendStatus(500);
        });
});





Categories/Tags:
    Get all categories/tags //done
    Get posts by category/tag //done

Followers/Following:
    Follow/unfollow a user 
    Get followers/following list for a user   //done
Search:
    Search posts by keyword
    Search users by username
Miscellaneous:
    Reset password
    Get user activity feed
    Get trending posts

User Routes:
User Registration (POST /url/users/register) done
User Login (POST /url/users/login) done
User Logout (POST /url/users/logout) done

User Routes:
Get User Profile (GET /url/users/profile) done
Post User Profile (Post /url/users/profile) done
Update User Profile (PUT /url/users/profile) done
Delete User Account (DELETE /url/users/profile) not need

Post Routes:
Create Post (POST /url/posts) done //notification
Get All Posts (GET /url/posts) done
Get Post by ID (GET /url/posts/:id) done
Update Post (PUT /url/posts/:id) done
Delete Post (DELETE /url/posts/:id) done

Comment Routes:
Create Comment (POST /url/comments) done //notification
Update Comment (PUT /url/comments/:id) done
Delete Comment (DELETE /url/comments/:id) done

Like Routes:
Like and Unlike a Post (POST /url/likes/post/:postId) done //notification

Friendship Routes:
Send Friend Request (POST /url/friendships/request) done //notification
Accept/Reject Friend Request (PUT /url/friendships/request/:requestId) done //notification
Get Friends List (GET /url/friendships) done
Remove Friend (DELETE /url/friendships/:friendId) done

Chat Routes:
Send Message (POST /url/chats) done
Get Chat History (GET /url/chats/:userId) done
Delete Chat (DELETE /url/chats/:id) done

Notification Routes:
Get Notifications for User (GET /url/notifications) done
Mark Notification as Read (PUT /url/notifications/:id) done